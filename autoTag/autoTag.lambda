```python
#  Copyright 2016 Amazon Web Services, Inc. or its affiliates. All Rights Reserved.
#  This file is licensed to you under the AWS Customer Agreement (the "License").
#  You may not use this file except in compliance with the License.
#  A copy of the License is located at http://aws.amazon.com/agreement/ .
#  This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.
#  See the License for the specific language governing permissions and limitations under the License.

from botocore.vendored import requests
import json

SUCCESS = "SUCCESS"
FAILED = "FAILED"


def send(event, context, responseStatus, responseData, physicalResourceId):
    responseUrl = event['ResponseURL']
    print responseUrl
    responseBody = {}
    responseBody['Status'] = responseStatus
    responseBody['Reason'] = 'See the details in CloudWatch Log Stream: ' + context.log_stream_name
    responseBody['PhysicalResourceId'] = physicalResourceId or context.log_stream_name
    responseBody['StackId'] = event['StackId']
    responseBody['RequestId'] = event['RequestId']
    responseBody['LogicalResourceId'] = event['LogicalResourceId']
    responseBody['Data'] = responseData
    json_responseBody = json.dumps(responseBody)
    print "Response body:\n" + json_responseBody
    headers = {
        'content-type' : '',
        'content-length' : str(len(json_responseBody))
    }
    try:
        response = requests.put(responseUrl,
                                data=json_responseBody,
                                headers=headers)
        print "Status code: " + response.reason
    except Exception as e:
        print "send(..) failed executing requests.put(..): " + str(e)


# Handler to do Tag job
import boto3
def lambda_handler(event, context):
    ec2 = boto3.resource('ec2')
    data = event['ResourceProperties']
    instance_name = data['instance-name'] + '-os'
    instance = ec2.Instance(data['instance-id'])
    volume = instance.block_device_mappings
    volumeids = [vol['Ebs']['VolumeId'] for vol in volume]
    ec2.create_tags(Resources=volumeids, Tags=[{'Key': 'Name', 'Value': instance_name}])
    responsedata = {}
    send(event, context, SUCCESS, responsedata, 'LambdaAutoTag-' + instance_name)
```
